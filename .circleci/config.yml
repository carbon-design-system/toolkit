version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8.11
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install --offline

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Run ci checks
          command: yarn ci-check

      - setup_remote_docker:
          docker_layer_caching: false

      - run:
          name: Run end-to-end tests
          command: |
            docker-compose -f e2e/docker-compose.yml build
            docker-compose -f e2e/docker-compose.yml run test
            docker-compose -f e2e/docker-compose.yml down -v

  publish:
    docker:
      - image: circleci/node:8.11
    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}

      - run: yarn install --offline

      - run:
          name: Set NPM token
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN

      - run:
          name: Publish new packages with Lerna
          command: |
            yarn lerna publish patch --yes

workflows:
  version: 2
  test_and_publish:
    jobs:
      - test
      - publish:
          requires:
            - test
          filters:
            branches:
              only:
                - master
